{
  "apiInfo": {
    "title": "YAP Nest API",
    "description": "Proje yönetim platformu API dokümantasyonu",
    "version": "1.0",
    "baseUrl": "http://localhost:3001",
    "swaggerUrl": "http://localhost:3001/api"
  },
  "authentication": {
    "type": "Bearer Token",
    "endpoints": {
      "register": {
        "method": "POST",
        "path": "/auth/register",
        "description": "Yeni kullanıcı kaydı",
        "body": {
          "name": "string (required)",
          "email": "string (required, unique)",
          "password": "string (required, min: 6)",
          "avatar": "string (optional)",
          "role": "enum (admin, manager, member)"
        },
        "response": {
          "user": "UserResponseDto",
          "token": "string",
          "tokenType": "Bearer",
          "expiresIn": "number"
        }
      },
      "login": {
        "method": "POST",
        "path": "/auth/login",
        "description": "Kullanıcı girişi",
        "body": {
          "email": "string (required)",
          "password": "string (required)",
          "rememberMe": "boolean (optional)"
        },
        "response": {
          "user": "UserResponseDto",
          "token": "string",
          "tokenType": "Bearer",
          "expiresIn": "number"
        }
      },
      "refresh": {
        "method": "POST",
        "path": "/auth/refresh",
        "description": "Token yenileme",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": {
          "user": "UserResponseDto",
          "token": "string",
          "tokenType": "Bearer",
          "expiresIn": "number"
        }
      },
      "profile": {
        "method": "GET",
        "path": "/auth/profile",
        "description": "Kullanıcı profili",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": "UserResponseDto"
      }
    }
  },
  "projects": {
    "endpoints": {
      "create": {
        "method": "POST",
        "path": "/projects",
        "description": "Yeni proje oluştur",
        "headers": {
          "Authorization": "Bearer <token>",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "string (required, max: 200)",
          "description": "string (optional)",
          "startDate": "date (required)",
          "endDate": "date (optional)",
          "budget": "number (optional)",
          "progress": "number (optional, default: 0)"
        },
        "response": "Project"
      },
      "list": {
        "method": "GET",
        "path": "/projects",
        "description": "Projeleri listele (kullanıcıya ait veya admin için tümü)",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": "Project[]"
      },
      "stats": {
        "method": "GET",
        "path": "/projects/stats",
        "description": "Proje istatistikleri",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": {
          "total": "number",
          "active": "number",
          "completed": "number",
          "cancelled": "number",
          "completionRate": "number"
        }
      },
      "getById": {
        "method": "GET",
        "path": "/projects/:id",
        "description": "Proje detayı",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": "Project"
      },
      "update": {
        "method": "PATCH",
        "path": "/projects/:id",
        "description": "Proje güncelle",
        "headers": {
          "Authorization": "Bearer <token>",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "string (optional)",
          "description": "string (optional)",
          "status": "enum (active, completed, on_hold, cancelled)",
          "startDate": "date (optional)",
          "endDate": "date (optional)",
          "budget": "number (optional)",
          "progress": "number (optional)"
        },
        "response": "Project"
      },
      "delete": {
        "method": "DELETE",
        "path": "/projects/:id",
        "description": "Proje sil",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": {
          "message": "string"
        }
      }
    }
  },
  "tasks": {
    "endpoints": {
      "create": {
        "method": "POST",
        "path": "/tasks",
        "description": "Yeni görev oluştur",
        "headers": {
          "Authorization": "Bearer <token>",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "string (required, max: 200)",
          "description": "string (optional)",
          "projectId": "string (required)",
          "assigneeId": "string (required)",
          "priority": "enum (low, medium, high, urgent)",
          "dueDate": "date (optional)",
          "estimatedHours": "number (optional)",
          "parentTaskId": "string (optional)",
          "tags": "string[] (optional)"
        },
        "response": "Task"
      },
      "list": {
        "method": "GET",
        "path": "/tasks",
        "description": "Görevleri listele",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "query": {
          "projectId": "string (optional) - Projeye göre filtrele"
        },
        "response": "Task[]"
      },
      "stats": {
        "method": "GET",
        "path": "/tasks/stats",
        "description": "Görev istatistikleri",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": {
          "total": "number",
          "todo": "number",
          "inProgress": "number",
          "completed": "number",
          "cancelled": "number",
          "completionRate": "number"
        }
      },
      "getById": {
        "method": "GET",
        "path": "/tasks/:id",
        "description": "Görev detayı",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": "Task"
      },
      "update": {
        "method": "PATCH",
        "path": "/tasks/:id",
        "description": "Görev güncelle",
        "headers": {
          "Authorization": "Bearer <token>",
          "Content-Type": "application/json"
        },
        "body": {
          "title": "string (optional)",
          "description": "string (optional)",
          "status": "enum (todo, in_progress, completed, cancelled)",
          "priority": "enum (low, medium, high, urgent)",
          "assigneeId": "string (optional)",
          "dueDate": "date (optional)",
          "estimatedHours": "number (optional)",
          "actualHours": "number (optional)",
          "tags": "string[] (optional)"
        },
        "response": "Task"
      },
      "delete": {
        "method": "DELETE",
        "path": "/tasks/:id",
        "description": "Görev sil",
        "headers": {
          "Authorization": "Bearer <token>"
        },
        "response": {
          "message": "string"
        }
      }
    }
  },
  "entities": {
    "User": {
      "id": "string (UUID)",
      "name": "string",
      "email": "string",
      "avatar": "string | null",
      "role": "enum (admin, manager, member)",
      "isActive": "boolean",
      "createdAt": "date",
      "updatedAt": "date"
    },
    "Project": {
      "id": "string (UUID)",
      "title": "string",
      "description": "string | null",
      "status": "enum (active, completed, on_hold, cancelled)",
      "startDate": "date",
      "endDate": "date | null",
      "budget": "number | null",
      "progress": "number",
      "ownerId": "string (UUID)",
      "createdAt": "date",
      "updatedAt": "date",
      "owner": "User"
    },
    "Task": {
      "id": "string (UUID)",
      "title": "string",
      "description": "string | null",
      "status": "enum (todo, in_progress, completed, cancelled)",
      "priority": "enum (low, medium, high, urgent)",
      "assigneeId": "string (UUID)",
      "projectId": "string (UUID)",
      "dueDate": "date | null",
      "estimatedHours": "number | null",
      "actualHours": "number | null",
      "parentTaskId": "string (UUID) | null",
      "tags": "string[] | null",
      "createdAt": "date",
      "updatedAt": "date",
      "assignee": "User",
      "project": "Project"
    }
  },
  "enums": {
    "UserRole": ["admin", "manager", "member"],
    "ProjectStatus": ["active", "completed", "on_hold", "cancelled"],
    "TaskStatus": ["todo", "in_progress", "completed", "cancelled"],
    "TaskPriority": ["low", "medium", "high", "urgent"]
  },
  "exampleRequests": {
    "register": {
      "name": "Ahmet Yılmaz",
      "email": "ahmet@example.com",
      "password": "password123",
      "role": "member"
    },
    "login": {
      "email": "ahmet@example.com",
      "password": "password123",
      "rememberMe": false
    },
    "createProject": {
      "title": "E-ticaret Platformu",
      "description": "Modern e-ticaret platformu geliştirme projesi",
      "startDate": "2024-01-15",
      "endDate": "2024-06-30",
      "budget": 50000,
      "progress": 0
    },
    "createTask": {
      "title": "Veritabanı Tasarımı",
      "description": "E-ticaret platformu için veritabanı şeması oluşturma",
      "projectId": "64562a24-61a2-4ee4-aa22-0987a119711f",
      "assigneeId": "6168af51-e05b-4660-9c41-afd2e27e4bdf",
      "priority": "high",
      "dueDate": "2024-02-15",
      "estimatedHours": 16,
      "tags": ["database", "design"]
    }
  },
  "frontendUsage": {
    "authentication": {
      "login": "POST /auth/login ile token al, localStorage'a kaydet",
      "logout": "POST /auth/logout ile token'ı temizle",
      "refresh": "Token expire olduğunda POST /auth/refresh ile yenile",
      "headers": "Her API isteğinde Authorization: Bearer <token> header'ı ekle"
    },
    "projects": {
      "list": "GET /projects ile kullanıcının projelerini listele",
      "create": "POST /projects ile yeni proje oluştur",
      "update": "PATCH /projects/:id ile proje güncelle",
      "delete": "DELETE /projects/:id ile proje sil",
      "stats": "GET /projects/stats ile dashboard istatistikleri al"
    },
    "tasks": {
      "list": "GET /tasks ile görevleri listele",
      "filterByProject": "GET /tasks?projectId=:id ile projeye ait görevleri filtrele",
      "create": "POST /tasks ile yeni görev oluştur",
      "update": "PATCH /tasks/:id ile görev güncelle",
      "delete": "DELETE /tasks/:id ile görev sil",
      "stats": "GET /tasks/stats ile görev istatistikleri al"
    }
  },
  "errorResponses": {
    "400": "Bad Request - Geçersiz veri",
    "401": "Unauthorized - Token gerekli veya geçersiz",
    "403": "Forbidden - Yetkisiz erişim",
    "404": "Not Found - Kaynak bulunamadı",
    "409": "Conflict - Çakışma (örn: email zaten kullanımda)",
    "500": "Internal Server Error - Sunucu hatası"
  },
  "statusCodes": {
    "success": [200, 201],
    "clientError": [400, 401, 403, 404, 409],
    "serverError": [500]
  }
} 